<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>matplotlib on 炸鸡人博客</title>
    <link>https://zhajiman.github.io/tags/matplotlib/</link>
    <description>Recent content in matplotlib on 炸鸡人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 06 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://zhajiman.github.io/tags/matplotlib/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cartopy 系列：对入门教程的补充</title>
      <link>https://zhajiman.github.io/post/cartopy_appendix/</link>
      <pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zhajiman.github.io/post/cartopy_appendix/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;几年前曾写过 &lt;a href=&#34;https://zhajiman.github.io/post/cartopy_introduction/&#34; target=&#34;_blank&#34;&gt;Cartopy 系列：从入门到放弃&lt;/a&gt;，但现在来看还是遗漏了不少细节，比如初学者可能会遇到以下问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;经度是用 [-180°, 180°] 还是 [0°, 360°] 范围？&lt;/li&gt;
&lt;li&gt;为什么有时候设置的刻度显示不全？&lt;/li&gt;
&lt;li&gt;怎么截取跨越地图边界的区域，画图又怎么跨越边界？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文将会用坐标变换的思想来解答以上问题，希望能给读者一些实用的启示。本来应该把这些内容写到入门教程里的，但可能会太长，所以现在单独成篇。文中的讨论主要针对最常用的 Plate Carrée 投影，其它投影需要读者自己测试。代码基于 Cartopy 0.18.0，虽然现在已经更新到 0.20.0 了，但基本思想是一致的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Matplotlib 系列：colorbar 的设置</title>
      <link>https://zhajiman.github.io/post/matplotlib_colorbar/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zhajiman.github.io/post/matplotlib_colorbar/</guid>
      <description>&lt;h2 id=&#34;0-前言&#34;&gt;0. 前言&lt;/h2&gt;
&lt;p&gt;承接 &lt;a href=&#34;https://zhajiman.github.io/post/matplotlib_colormap/&#34; target=&#34;_blank&#34;&gt;Matplotlib 系列：colormap 的设置&lt;/a&gt; 一文，这次介绍 colorbar。所谓 colorbar 即主图旁一个长条状的小图，能够辅助表示主图中 colormap 的颜色组成和颜色与数值的对应关系。本文将会依次介绍 colorbar 的基本用法、如何设置刻度，以及怎么为组图添加 colorbar。代码基于 Matplotlib 3.3.4。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Matplotlib 系列：colormap 的设置</title>
      <link>https://zhajiman.github.io/post/matplotlib_colormap/</link>
      <pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zhajiman.github.io/post/matplotlib_colormap/</guid>
      <description>&lt;h2 id=&#34;0-前言&#34;&gt;0. 前言&lt;/h2&gt;
&lt;p&gt;所谓 colormap（颜色表），就是将一系列颜色按给定的顺序排列在一起。其用处是，我们可以通过某种映射关系，将一系列数值映射到一张 colormap 上去，使不同大小的数值对应不同的颜色。这样一来，在绘制填色图时便能直观地用颜色来反映数值的分布。&lt;/p&gt;
&lt;p&gt;在 Matplotlib 中，数值到颜色的映射关系可以用下面这张图来表示&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;img-zoomable&#34; src=&#34;https://zhajiman.github.io/matplotlib_colormap/value_color_mapping.png&#34; alt=&#34;value_color_mapping.png&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;图中分为前后两部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先将数组的数值归一化（Normalization）到浮点型的 [0.0, 1.0] 范围或整型的 [0, N - 1] 范围上去。&lt;/li&gt;
&lt;li&gt;再把归一化的数据输入给 colormap，输出数组数值对应的颜色（RGBA 值）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二部分的映射关系基本上是固定不变的，但第一部分的映射关系可以通过 Matplotlib 的许多类来加以改变，进而实现对数色标、对称色标、离散色标等一系列可视化效果。&lt;/p&gt;
&lt;p&gt;本文将会依次介绍 &lt;code&gt;Colormap&lt;/code&gt; 类、归一化会用到的类，以及实际应用的例子。代码基于 Matplotlib 3.3.4。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Matplotlib 系列：导出高 DPI 的图片</title>
      <link>https://zhajiman.github.io/post/matplotlib_dpi/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zhajiman.github.io/post/matplotlib_dpi/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;昨天一同学问我怎么把已经画好的图片的 DPI 改到 300，以满足期刊对图片清晰度的要求。上网搜索一番后才发现，虽然我经常在 Matplotlib 中用 &lt;code&gt;dpi&lt;/code&gt; 参数来调节图片清晰度，但实际上我对这个概念半懂不懂。这次借这个契机调研和总结一下相关的知识。本文将会依次介绍&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分辨率和 DPI 是什么。&lt;/li&gt;
&lt;li&gt;DPI 和清晰度的关系。&lt;/li&gt;
&lt;li&gt;如何导出期刊要求的高 DPI 图片。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Cartopy 系列：为 Lambert 投影地图添加刻度</title>
      <link>https://zhajiman.github.io/post/cartopy_lambert/</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zhajiman.github.io/post/cartopy_lambert/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;Cartopy 中的 Plate Carrée 投影使用方便，但在展示中国地图时会使中国的形状显得很瘪，与之相比，Lambert 投影的效果会更加美观，下图显示了两种投影的差异&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;img-zoomable&#34; src=&#34;https://zhajiman.github.io/cartopy_lambert/comparison.png&#34; alt=&#34;comparison&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;所以本文将会介绍如何在 Cartopy 中实现 Lambert 投影，并为地图添上合适的刻度。文中 Cartopy 的版本是 0.18.0。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cartopy 系列：从入门到放弃</title>
      <link>https://zhajiman.github.io/post/cartopy_introduction/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zhajiman.github.io/post/cartopy_introduction/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;常用的地图可视化的编程工具有 MATLAB、IDL、GrADS、GMT、NCL 等。我之前一直使用的是脚本语言 NCL，易用性不错，画地图的效果也很好。然而 2019 年初，NCAR 宣布 NCL 将停止更新，并会在日后转为 Python 的绘图包。于是我开始考虑转投 Python，同时觉得在 Python 环境下如果还是用 PyNGL 那一套语法的话，未免有些换汤不换药。因此我选择用 Python 环境下专有的 Cartopy 包来画地图。&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;img-zoomable&#34; src=&#34;https://zhajiman.github.io/cartopy_introduction/cartopy_log.png&#34; alt=&#34;cartopy_log&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;此前 Python 最常用的地图包是 Basemap，然而它将于 2020 年被弃用，官方推荐使用 Cartopy 包作为替代。Cartopy 是英国气象局开发的地图绘图包，实现了 Basemap 的大部分功能，还可以通过 Matplotlib 的 API 实现丰富的自定义效果。&lt;/p&gt;
&lt;p&gt;本文将会从一个 NCL 转 Python 的入门者的角度，介绍如何安装 Cartopy，如何绘制地图，并实现一些常用的效果。代码基于 0.18.0 版本的 Cartopy。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
